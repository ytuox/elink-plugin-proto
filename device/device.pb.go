// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v5.26.1
// source: device/device.proto

package device

import (
	common "github.com/ytuox/elink-plugin-proto/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeviceStatus int32

const (
	DeviceStatus_UnKnow   DeviceStatus = 0 // 未知
	DeviceStatus_UnActive DeviceStatus = 1 // 未激活
	DeviceStatus_Offline  DeviceStatus = 2 // 离线
	DeviceStatus_Online   DeviceStatus = 3 // 在线
	DeviceStatus_Disable  DeviceStatus = 4 // 禁用
)

// Enum value maps for DeviceStatus.
var (
	DeviceStatus_name = map[int32]string{
		0: "UnKnow",
		1: "UnActive",
		2: "Offline",
		3: "Online",
		4: "Disable",
	}
	DeviceStatus_value = map[string]int32{
		"UnKnow":   0,
		"UnActive": 1,
		"Offline":  2,
		"Online":   3,
		"Disable":  4,
	}
)

func (x DeviceStatus) Enum() *DeviceStatus {
	p := new(DeviceStatus)
	*p = x
	return p
}

func (x DeviceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_device_device_proto_enumTypes[0].Descriptor()
}

func (DeviceStatus) Type() protoreflect.EnumType {
	return &file_device_device_proto_enumTypes[0]
}

func (x DeviceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceStatus.Descriptor instead.
func (DeviceStatus) EnumDescriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{0}
}

type ConnectStatus int32

const (
	ConnectStatus_UnACTIVE ConnectStatus = 0 //未激活
	ConnectStatus_OFFLINE  ConnectStatus = 1 //离线
	ConnectStatus_ONLINE   ConnectStatus = 2 //在线
	ConnectStatus_DISABLE  ConnectStatus = 3 //禁用
)

// Enum value maps for ConnectStatus.
var (
	ConnectStatus_name = map[int32]string{
		0: "UnACTIVE",
		1: "OFFLINE",
		2: "ONLINE",
		3: "DISABLE",
	}
	ConnectStatus_value = map[string]int32{
		"UnACTIVE": 0,
		"OFFLINE":  1,
		"ONLINE":   2,
		"DISABLE":  3,
	}
)

func (x ConnectStatus) Enum() *ConnectStatus {
	p := new(ConnectStatus)
	*p = x
	return p
}

func (x ConnectStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_device_device_proto_enumTypes[1].Descriptor()
}

func (ConnectStatus) Type() protoreflect.EnumType {
	return &file_device_device_proto_enumTypes[1]
}

func (x ConnectStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectStatus.Descriptor instead.
func (ConnectStatus) EnumDescriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{1}
}

type ConnectIotPlatformRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseRequest *common.BaseRequest `protobuf:"bytes,1,opt,name=baseRequest,proto3" json:"baseRequest,omitempty"`
	DeviceId    string              `protobuf:"bytes,2,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
}

func (x *ConnectIotPlatformRequest) Reset() {
	*x = ConnectIotPlatformRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_device_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectIotPlatformRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectIotPlatformRequest) ProtoMessage() {}

func (x *ConnectIotPlatformRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectIotPlatformRequest.ProtoReflect.Descriptor instead.
func (*ConnectIotPlatformRequest) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectIotPlatformRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *ConnectIotPlatformRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type ConnectIotPlatformResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse *common.CommonResponse           `protobuf:"bytes,1,opt,name=baseResponse,proto3" json:"baseResponse,omitempty"`
	Data         *ConnectIotPlatformResponse_Data `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ConnectIotPlatformResponse) Reset() {
	*x = ConnectIotPlatformResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_device_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectIotPlatformResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectIotPlatformResponse) ProtoMessage() {}

func (x *ConnectIotPlatformResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectIotPlatformResponse.ProtoReflect.Descriptor instead.
func (*ConnectIotPlatformResponse) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{1}
}

func (x *ConnectIotPlatformResponse) GetBaseResponse() *common.CommonResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *ConnectIotPlatformResponse) GetData() *ConnectIotPlatformResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type DisconnectIotPlatformRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseRequest *common.BaseRequest `protobuf:"bytes,1,opt,name=baseRequest,proto3" json:"baseRequest,omitempty"`
	DeviceId    string              `protobuf:"bytes,2,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
}

func (x *DisconnectIotPlatformRequest) Reset() {
	*x = DisconnectIotPlatformRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_device_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectIotPlatformRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectIotPlatformRequest) ProtoMessage() {}

func (x *DisconnectIotPlatformRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectIotPlatformRequest.ProtoReflect.Descriptor instead.
func (*DisconnectIotPlatformRequest) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{2}
}

func (x *DisconnectIotPlatformRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *DisconnectIotPlatformRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type DisconnectIotPlatformResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse *common.CommonResponse              `protobuf:"bytes,1,opt,name=baseResponse,proto3" json:"baseResponse,omitempty"`
	Data         *DisconnectIotPlatformResponse_Data `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DisconnectIotPlatformResponse) Reset() {
	*x = DisconnectIotPlatformResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_device_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectIotPlatformResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectIotPlatformResponse) ProtoMessage() {}

func (x *DisconnectIotPlatformResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectIotPlatformResponse.ProtoReflect.Descriptor instead.
func (*DisconnectIotPlatformResponse) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{3}
}

func (x *DisconnectIotPlatformResponse) GetBaseResponse() *common.CommonResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *DisconnectIotPlatformResponse) GetData() *DisconnectIotPlatformResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryDeviceByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseRequest *common.BaseRequest `protobuf:"bytes,1,opt,name=baseRequest,proto3" json:"baseRequest,omitempty"`
	Id          string              `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryDeviceByIdRequest) Reset() {
	*x = QueryDeviceByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_device_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDeviceByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDeviceByIdRequest) ProtoMessage() {}

func (x *QueryDeviceByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDeviceByIdRequest.ProtoReflect.Descriptor instead.
func (*QueryDeviceByIdRequest) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{4}
}

func (x *QueryDeviceByIdRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *QueryDeviceByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type QueryDeviceByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse *common.CommonResponse        `protobuf:"bytes,1,opt,name=baseResponse,proto3" json:"baseResponse,omitempty"`
	Data         *QueryDeviceByIdResponse_Data `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryDeviceByIdResponse) Reset() {
	*x = QueryDeviceByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_device_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDeviceByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDeviceByIdResponse) ProtoMessage() {}

func (x *QueryDeviceByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDeviceByIdResponse.ProtoReflect.Descriptor instead.
func (*QueryDeviceByIdResponse) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{5}
}

func (x *QueryDeviceByIdResponse) GetBaseResponse() *common.CommonResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *QueryDeviceByIdResponse) GetData() *QueryDeviceByIdResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string       `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ProductId   string       `protobuf:"bytes,4,opt,name=productId,proto3" json:"productId,omitempty"`
	Status      DeviceStatus `protobuf:"varint,5,opt,name=status,proto3,enum=device.DeviceStatus" json:"status,omitempty"`
	DeviceSn    string       `protobuf:"bytes,6,opt,name=deviceSn,proto3" json:"deviceSn,omitempty"`
	Secret      string       `protobuf:"bytes,7,opt,name=secret,proto3" json:"secret,omitempty"`
	AppId       string       `protobuf:"bytes,8,opt,name=appId,proto3" json:"appId,omitempty"`
	Location    string       `protobuf:"bytes,9,opt,name=location,proto3" json:"location,omitempty"`
	CreatedBy   string       `protobuf:"bytes,10,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_device_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{6}
}

func (x *Device) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Device) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Device) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Device) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *Device) GetStatus() DeviceStatus {
	if x != nil {
		return x.Status
	}
	return DeviceStatus_UnKnow
}

func (x *Device) GetDeviceSn() string {
	if x != nil {
		return x.DeviceSn
	}
	return ""
}

func (x *Device) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *Device) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *Device) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Device) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

type QueryDeviceListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseRequest *common.BaseRequest `protobuf:"bytes,1,opt,name=baseRequest,proto3" json:"baseRequest,omitempty"`
}

func (x *QueryDeviceListRequest) Reset() {
	*x = QueryDeviceListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_device_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDeviceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDeviceListRequest) ProtoMessage() {}

func (x *QueryDeviceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDeviceListRequest.ProtoReflect.Descriptor instead.
func (*QueryDeviceListRequest) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{7}
}

func (x *QueryDeviceListRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

type QueryDeviceListByUserIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseRequest *common.BaseRequest `protobuf:"bytes,1,opt,name=baseRequest,proto3" json:"baseRequest,omitempty"`
	UserId      string              `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *QueryDeviceListByUserIdRequest) Reset() {
	*x = QueryDeviceListByUserIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_device_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDeviceListByUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDeviceListByUserIdRequest) ProtoMessage() {}

func (x *QueryDeviceListByUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDeviceListByUserIdRequest.ProtoReflect.Descriptor instead.
func (*QueryDeviceListByUserIdRequest) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{8}
}

func (x *QueryDeviceListByUserIdRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *QueryDeviceListByUserIdRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type QueryDeviceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse *common.CommonResponse        `protobuf:"bytes,1,opt,name=baseResponse,proto3" json:"baseResponse,omitempty"`
	Data         *QueryDeviceListResponse_Data `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryDeviceListResponse) Reset() {
	*x = QueryDeviceListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_device_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDeviceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDeviceListResponse) ProtoMessage() {}

func (x *QueryDeviceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDeviceListResponse.ProtoReflect.Descriptor instead.
func (*QueryDeviceListResponse) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{9}
}

func (x *QueryDeviceListResponse) GetBaseResponse() *common.CommonResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *QueryDeviceListResponse) GetData() *QueryDeviceListResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type AddDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ProductId   string `protobuf:"bytes,2,opt,name=productId,proto3" json:"productId,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	DeviceSn    string `protobuf:"bytes,4,opt,name=deviceSn,proto3" json:"deviceSn,omitempty"`
	AppId       string `protobuf:"bytes,5,opt,name=appId,proto3" json:"appId,omitempty"`
	Location    string `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *AddDevice) Reset() {
	*x = AddDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_device_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDevice) ProtoMessage() {}

func (x *AddDevice) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDevice.ProtoReflect.Descriptor instead.
func (*AddDevice) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{10}
}

func (x *AddDevice) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddDevice) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *AddDevice) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddDevice) GetDeviceSn() string {
	if x != nil {
		return x.DeviceSn
	}
	return ""
}

func (x *AddDevice) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *AddDevice) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type CreateDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseRequest *common.BaseRequest `protobuf:"bytes,1,opt,name=baseRequest,proto3" json:"baseRequest,omitempty"`
	Device      *AddDevice          `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *CreateDeviceRequest) Reset() {
	*x = CreateDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_device_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceRequest) ProtoMessage() {}

func (x *CreateDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceRequest.ProtoReflect.Descriptor instead.
func (*CreateDeviceRequest) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{11}
}

func (x *CreateDeviceRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *CreateDeviceRequest) GetDevice() *AddDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

type CreateDeviceRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse *common.CommonResponse            `protobuf:"bytes,1,opt,name=baseResponse,proto3" json:"baseResponse,omitempty"`
	Data         *CreateDeviceRequestResponse_Data `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateDeviceRequestResponse) Reset() {
	*x = CreateDeviceRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_device_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceRequestResponse) ProtoMessage() {}

func (x *CreateDeviceRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceRequestResponse.ProtoReflect.Descriptor instead.
func (*CreateDeviceRequestResponse) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{12}
}

func (x *CreateDeviceRequestResponse) GetBaseResponse() *common.CommonResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *CreateDeviceRequestResponse) GetData() *CreateDeviceRequestResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateDeviceAndConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device *AddDevice `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *CreateDeviceAndConnectRequest) Reset() {
	*x = CreateDeviceAndConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_device_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceAndConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceAndConnectRequest) ProtoMessage() {}

func (x *CreateDeviceAndConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceAndConnectRequest.ProtoReflect.Descriptor instead.
func (*CreateDeviceAndConnectRequest) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{13}
}

func (x *CreateDeviceAndConnectRequest) GetDevice() *AddDevice {
	if x != nil {
		return x.Device
	}
	return nil
}

type CreateDeviceAndConnectRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse *common.CommonResponse                      `protobuf:"bytes,1,opt,name=baseResponse,proto3" json:"baseResponse,omitempty"`
	Data         *CreateDeviceAndConnectRequestResponse_Data `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateDeviceAndConnectRequestResponse) Reset() {
	*x = CreateDeviceAndConnectRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_device_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceAndConnectRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceAndConnectRequestResponse) ProtoMessage() {}

func (x *CreateDeviceAndConnectRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceAndConnectRequestResponse.ProtoReflect.Descriptor instead.
func (*CreateDeviceAndConnectRequestResponse) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{14}
}

func (x *CreateDeviceAndConnectRequestResponse) GetBaseResponse() *common.CommonResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *CreateDeviceAndConnectRequestResponse) GetData() *CreateDeviceAndConnectRequestResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseRequest *common.BaseRequest `protobuf:"bytes,1,opt,name=baseRequest,proto3" json:"baseRequest,omitempty"`
	DeviceId    string              `protobuf:"bytes,2,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
}

func (x *DeleteDeviceRequest) Reset() {
	*x = DeleteDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_device_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeviceRequest) ProtoMessage() {}

func (x *DeleteDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeviceRequest.ProtoReflect.Descriptor instead.
func (*DeleteDeviceRequest) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteDeviceRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *DeleteDeviceRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type DeleteDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse *common.CommonResponse `protobuf:"bytes,1,opt,name=baseResponse,proto3" json:"baseResponse,omitempty"`
}

func (x *DeleteDeviceResponse) Reset() {
	*x = DeleteDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_device_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeviceResponse) ProtoMessage() {}

func (x *DeleteDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeviceResponse.ProtoReflect.Descriptor instead.
func (*DeleteDeviceResponse) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteDeviceResponse) GetBaseResponse() *common.CommonResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

type GetDeviceConnectStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseRequest *common.BaseRequest `protobuf:"bytes,1,opt,name=baseRequest,proto3" json:"baseRequest,omitempty"`
	DeviceId    string              `protobuf:"bytes,2,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
}

func (x *GetDeviceConnectStatusRequest) Reset() {
	*x = GetDeviceConnectStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_device_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceConnectStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceConnectStatusRequest) ProtoMessage() {}

func (x *GetDeviceConnectStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceConnectStatusRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceConnectStatusRequest) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{17}
}

func (x *GetDeviceConnectStatusRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *GetDeviceConnectStatusRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type GetDeviceConnectStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse *common.CommonResponse               `protobuf:"bytes,1,opt,name=baseResponse,proto3" json:"baseResponse,omitempty"`
	Data         *GetDeviceConnectStatusResponse_Data `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetDeviceConnectStatusResponse) Reset() {
	*x = GetDeviceConnectStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_device_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceConnectStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceConnectStatusResponse) ProtoMessage() {}

func (x *GetDeviceConnectStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceConnectStatusResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceConnectStatusResponse) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{18}
}

func (x *GetDeviceConnectStatusResponse) GetBaseResponse() *common.CommonResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *GetDeviceConnectStatusResponse) GetData() *GetDeviceConnectStatusResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type ConnectIotPlatformResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ConnectStatus `protobuf:"varint,1,opt,name=status,proto3,enum=device.ConnectStatus" json:"status,omitempty"`
}

func (x *ConnectIotPlatformResponse_Data) Reset() {
	*x = ConnectIotPlatformResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_device_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectIotPlatformResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectIotPlatformResponse_Data) ProtoMessage() {}

func (x *ConnectIotPlatformResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectIotPlatformResponse_Data.ProtoReflect.Descriptor instead.
func (*ConnectIotPlatformResponse_Data) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ConnectIotPlatformResponse_Data) GetStatus() ConnectStatus {
	if x != nil {
		return x.Status
	}
	return ConnectStatus_UnACTIVE
}

type DisconnectIotPlatformResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ConnectStatus `protobuf:"varint,1,opt,name=status,proto3,enum=device.ConnectStatus" json:"status,omitempty"`
}

func (x *DisconnectIotPlatformResponse_Data) Reset() {
	*x = DisconnectIotPlatformResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_device_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectIotPlatformResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectIotPlatformResponse_Data) ProtoMessage() {}

func (x *DisconnectIotPlatformResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectIotPlatformResponse_Data.ProtoReflect.Descriptor instead.
func (*DisconnectIotPlatformResponse_Data) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{3, 0}
}

func (x *DisconnectIotPlatformResponse_Data) GetStatus() ConnectStatus {
	if x != nil {
		return x.Status
	}
	return ConnectStatus_UnACTIVE
}

type QueryDeviceByIdResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device *Device `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *QueryDeviceByIdResponse_Data) Reset() {
	*x = QueryDeviceByIdResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_device_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDeviceByIdResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDeviceByIdResponse_Data) ProtoMessage() {}

func (x *QueryDeviceByIdResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDeviceByIdResponse_Data.ProtoReflect.Descriptor instead.
func (*QueryDeviceByIdResponse_Data) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{5, 0}
}

func (x *QueryDeviceByIdResponse_Data) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

type QueryDeviceListResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total   uint32    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Devices []*Device `protobuf:"bytes,2,rep,name=devices,proto3" json:"devices,omitempty"`
}

func (x *QueryDeviceListResponse_Data) Reset() {
	*x = QueryDeviceListResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_device_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDeviceListResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDeviceListResponse_Data) ProtoMessage() {}

func (x *QueryDeviceListResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDeviceListResponse_Data.ProtoReflect.Descriptor instead.
func (*QueryDeviceListResponse_Data) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{9, 0}
}

func (x *QueryDeviceListResponse_Data) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryDeviceListResponse_Data) GetDevices() []*Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

type CreateDeviceRequestResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Devices *Device `protobuf:"bytes,2,opt,name=devices,proto3" json:"devices,omitempty"`
}

func (x *CreateDeviceRequestResponse_Data) Reset() {
	*x = CreateDeviceRequestResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_device_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceRequestResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceRequestResponse_Data) ProtoMessage() {}

func (x *CreateDeviceRequestResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceRequestResponse_Data.ProtoReflect.Descriptor instead.
func (*CreateDeviceRequestResponse_Data) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{12, 0}
}

func (x *CreateDeviceRequestResponse_Data) GetDevices() *Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

type CreateDeviceAndConnectRequestResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Devices *Device `protobuf:"bytes,1,opt,name=devices,proto3" json:"devices,omitempty"`
}

func (x *CreateDeviceAndConnectRequestResponse_Data) Reset() {
	*x = CreateDeviceAndConnectRequestResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_device_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceAndConnectRequestResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceAndConnectRequestResponse_Data) ProtoMessage() {}

func (x *CreateDeviceAndConnectRequestResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceAndConnectRequestResponse_Data.ProtoReflect.Descriptor instead.
func (*CreateDeviceAndConnectRequestResponse_Data) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{14, 0}
}

func (x *CreateDeviceAndConnectRequestResponse_Data) GetDevices() *Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

type GetDeviceConnectStatusResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ConnectStatus `protobuf:"varint,1,opt,name=status,proto3,enum=device.ConnectStatus" json:"status,omitempty"`
}

func (x *GetDeviceConnectStatusResponse_Data) Reset() {
	*x = GetDeviceConnectStatusResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_device_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceConnectStatusResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceConnectStatusResponse_Data) ProtoMessage() {}

func (x *GetDeviceConnectStatusResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_device_device_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceConnectStatusResponse_Data.ProtoReflect.Descriptor instead.
func (*GetDeviceConnectStatusResponse_Data) Descriptor() ([]byte, []int) {
	return file_device_device_proto_rawDescGZIP(), []int{18, 0}
}

func (x *GetDeviceConnectStatusResponse_Data) GetStatus() ConnectStatus {
	if x != nil {
		return x.Status
	}
	return ConnectStatus_UnACTIVE
}

var File_device_device_proto protoreflect.FileDescriptor

var file_device_device_proto_rawDesc = []byte{
	0x0a, 0x13, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x13, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x6e, 0x0a, 0x19, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6f, 0x74,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x35, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x22, 0xcc, 0x01, 0x0a, 0x1a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6f,
	0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6f, 0x74, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x35, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x71, 0x0a, 0x1c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49,
	0x6f, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x35, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x22, 0xd2, 0x01, 0x0a, 0x1d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x49, 0x6f, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x49, 0x6f, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x35, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5f, 0x0a, 0x16, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x62,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xbf, 0x01, 0x0a, 0x17, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x2e, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x9e, 0x02, 0x0a,
	0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x4f, 0x0a,
	0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6f,
	0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x35, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0xd7, 0x01, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x62,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x46, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x28, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0xad, 0x01, 0x0a, 0x09, 0x41, 0x64,
	0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x77, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x35, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x41, 0x64, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x22, 0xc9, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x30, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x4a,
	0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6e,
	0x64, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x29, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0xdd, 0x01, 0x0a, 0x25, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6e, 0x64, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x46, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x30, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x28, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x68, 0x0a, 0x13, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x35, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0c,
	0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x72, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0b, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0xd4, 0x01, 0x0a,
	0x1e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x62,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x35, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2a, 0x4e, 0x0a, 0x0c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x6e, 0x4b, 0x6e, 0x6f, 0x77, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x55, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x10, 0x04, 0x2a, 0x43, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x6e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x4f, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x44,
	0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x03, 0x32, 0xe2, 0x06, 0x0a, 0x09, 0x52, 0x50, 0x43,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x49, 0x6f, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x21, 0x2e, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6f, 0x74,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x49, 0x6f, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x15, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x49, 0x6f, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x24,
	0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x49, 0x6f, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6f, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54,
	0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x1e, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x26, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70,
	0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6e,
	0x64, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x25, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6e,
	0x64, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2d, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4b, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x1b, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2f, 0x5a,
	0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x69, 0x6e, 0x63,
	0x2d, 0x6c, 0x69, 0x6e, 0x6b, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x2d, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_device_device_proto_rawDescOnce sync.Once
	file_device_device_proto_rawDescData = file_device_device_proto_rawDesc
)

func file_device_device_proto_rawDescGZIP() []byte {
	file_device_device_proto_rawDescOnce.Do(func() {
		file_device_device_proto_rawDescData = protoimpl.X.CompressGZIP(file_device_device_proto_rawDescData)
	})
	return file_device_device_proto_rawDescData
}

var file_device_device_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_device_device_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_device_device_proto_goTypes = []interface{}{
	(DeviceStatus)(0),                                  // 0: device.DeviceStatus
	(ConnectStatus)(0),                                 // 1: device.ConnectStatus
	(*ConnectIotPlatformRequest)(nil),                  // 2: device.ConnectIotPlatformRequest
	(*ConnectIotPlatformResponse)(nil),                 // 3: device.ConnectIotPlatformResponse
	(*DisconnectIotPlatformRequest)(nil),               // 4: device.DisconnectIotPlatformRequest
	(*DisconnectIotPlatformResponse)(nil),              // 5: device.DisconnectIotPlatformResponse
	(*QueryDeviceByIdRequest)(nil),                     // 6: device.QueryDeviceByIdRequest
	(*QueryDeviceByIdResponse)(nil),                    // 7: device.QueryDeviceByIdResponse
	(*Device)(nil),                                     // 8: device.Device
	(*QueryDeviceListRequest)(nil),                     // 9: device.QueryDeviceListRequest
	(*QueryDeviceListByUserIdRequest)(nil),             // 10: device.QueryDeviceListByUserIdRequest
	(*QueryDeviceListResponse)(nil),                    // 11: device.QueryDeviceListResponse
	(*AddDevice)(nil),                                  // 12: device.AddDevice
	(*CreateDeviceRequest)(nil),                        // 13: device.CreateDeviceRequest
	(*CreateDeviceRequestResponse)(nil),                // 14: device.CreateDeviceRequestResponse
	(*CreateDeviceAndConnectRequest)(nil),              // 15: device.CreateDeviceAndConnectRequest
	(*CreateDeviceAndConnectRequestResponse)(nil),      // 16: device.CreateDeviceAndConnectRequestResponse
	(*DeleteDeviceRequest)(nil),                        // 17: device.DeleteDeviceRequest
	(*DeleteDeviceResponse)(nil),                       // 18: device.DeleteDeviceResponse
	(*GetDeviceConnectStatusRequest)(nil),              // 19: device.GetDeviceConnectStatusRequest
	(*GetDeviceConnectStatusResponse)(nil),             // 20: device.GetDeviceConnectStatusResponse
	(*ConnectIotPlatformResponse_Data)(nil),            // 21: device.ConnectIotPlatformResponse.Data
	(*DisconnectIotPlatformResponse_Data)(nil),         // 22: device.DisconnectIotPlatformResponse.Data
	(*QueryDeviceByIdResponse_Data)(nil),               // 23: device.QueryDeviceByIdResponse.Data
	(*QueryDeviceListResponse_Data)(nil),               // 24: device.QueryDeviceListResponse.Data
	(*CreateDeviceRequestResponse_Data)(nil),           // 25: device.CreateDeviceRequestResponse.Data
	(*CreateDeviceAndConnectRequestResponse_Data)(nil), // 26: device.CreateDeviceAndConnectRequestResponse.Data
	(*GetDeviceConnectStatusResponse_Data)(nil),        // 27: device.GetDeviceConnectStatusResponse.Data
	(*common.BaseRequest)(nil),                         // 28: common.BaseRequest
	(*common.CommonResponse)(nil),                      // 29: common.CommonResponse
}
var file_device_device_proto_depIdxs = []int32{
	28, // 0: device.ConnectIotPlatformRequest.baseRequest:type_name -> common.BaseRequest
	29, // 1: device.ConnectIotPlatformResponse.baseResponse:type_name -> common.CommonResponse
	21, // 2: device.ConnectIotPlatformResponse.data:type_name -> device.ConnectIotPlatformResponse.Data
	28, // 3: device.DisconnectIotPlatformRequest.baseRequest:type_name -> common.BaseRequest
	29, // 4: device.DisconnectIotPlatformResponse.baseResponse:type_name -> common.CommonResponse
	22, // 5: device.DisconnectIotPlatformResponse.data:type_name -> device.DisconnectIotPlatformResponse.Data
	28, // 6: device.QueryDeviceByIdRequest.baseRequest:type_name -> common.BaseRequest
	29, // 7: device.QueryDeviceByIdResponse.baseResponse:type_name -> common.CommonResponse
	23, // 8: device.QueryDeviceByIdResponse.data:type_name -> device.QueryDeviceByIdResponse.Data
	0,  // 9: device.Device.status:type_name -> device.DeviceStatus
	28, // 10: device.QueryDeviceListRequest.baseRequest:type_name -> common.BaseRequest
	28, // 11: device.QueryDeviceListByUserIdRequest.baseRequest:type_name -> common.BaseRequest
	29, // 12: device.QueryDeviceListResponse.baseResponse:type_name -> common.CommonResponse
	24, // 13: device.QueryDeviceListResponse.data:type_name -> device.QueryDeviceListResponse.Data
	28, // 14: device.CreateDeviceRequest.baseRequest:type_name -> common.BaseRequest
	12, // 15: device.CreateDeviceRequest.device:type_name -> device.AddDevice
	29, // 16: device.CreateDeviceRequestResponse.baseResponse:type_name -> common.CommonResponse
	25, // 17: device.CreateDeviceRequestResponse.data:type_name -> device.CreateDeviceRequestResponse.Data
	12, // 18: device.CreateDeviceAndConnectRequest.device:type_name -> device.AddDevice
	29, // 19: device.CreateDeviceAndConnectRequestResponse.baseResponse:type_name -> common.CommonResponse
	26, // 20: device.CreateDeviceAndConnectRequestResponse.data:type_name -> device.CreateDeviceAndConnectRequestResponse.Data
	28, // 21: device.DeleteDeviceRequest.baseRequest:type_name -> common.BaseRequest
	29, // 22: device.DeleteDeviceResponse.baseResponse:type_name -> common.CommonResponse
	28, // 23: device.GetDeviceConnectStatusRequest.baseRequest:type_name -> common.BaseRequest
	29, // 24: device.GetDeviceConnectStatusResponse.baseResponse:type_name -> common.CommonResponse
	27, // 25: device.GetDeviceConnectStatusResponse.data:type_name -> device.GetDeviceConnectStatusResponse.Data
	1,  // 26: device.ConnectIotPlatformResponse.Data.status:type_name -> device.ConnectStatus
	1,  // 27: device.DisconnectIotPlatformResponse.Data.status:type_name -> device.ConnectStatus
	8,  // 28: device.QueryDeviceByIdResponse.Data.device:type_name -> device.Device
	8,  // 29: device.QueryDeviceListResponse.Data.devices:type_name -> device.Device
	8,  // 30: device.CreateDeviceRequestResponse.Data.devices:type_name -> device.Device
	8,  // 31: device.CreateDeviceAndConnectRequestResponse.Data.devices:type_name -> device.Device
	1,  // 32: device.GetDeviceConnectStatusResponse.Data.status:type_name -> device.ConnectStatus
	2,  // 33: device.RPCDevice.ConnectIotPlatform:input_type -> device.ConnectIotPlatformRequest
	4,  // 34: device.RPCDevice.DisconnectIotPlatform:input_type -> device.DisconnectIotPlatformRequest
	19, // 35: device.RPCDevice.GetDeviceConnectStatus:input_type -> device.GetDeviceConnectStatusRequest
	9,  // 36: device.RPCDevice.QueryDeviceList:input_type -> device.QueryDeviceListRequest
	6,  // 37: device.RPCDevice.QueryDeviceById:input_type -> device.QueryDeviceByIdRequest
	10, // 38: device.RPCDevice.QueryDeviceListByUserId:input_type -> device.QueryDeviceListByUserIdRequest
	13, // 39: device.RPCDevice.CreateDevice:input_type -> device.CreateDeviceRequest
	15, // 40: device.RPCDevice.CreateDeviceAndConnect:input_type -> device.CreateDeviceAndConnectRequest
	17, // 41: device.RPCDevice.DeleteDevice:input_type -> device.DeleteDeviceRequest
	3,  // 42: device.RPCDevice.ConnectIotPlatform:output_type -> device.ConnectIotPlatformResponse
	5,  // 43: device.RPCDevice.DisconnectIotPlatform:output_type -> device.DisconnectIotPlatformResponse
	20, // 44: device.RPCDevice.GetDeviceConnectStatus:output_type -> device.GetDeviceConnectStatusResponse
	11, // 45: device.RPCDevice.QueryDeviceList:output_type -> device.QueryDeviceListResponse
	7,  // 46: device.RPCDevice.QueryDeviceById:output_type -> device.QueryDeviceByIdResponse
	11, // 47: device.RPCDevice.QueryDeviceListByUserId:output_type -> device.QueryDeviceListResponse
	14, // 48: device.RPCDevice.CreateDevice:output_type -> device.CreateDeviceRequestResponse
	16, // 49: device.RPCDevice.CreateDeviceAndConnect:output_type -> device.CreateDeviceAndConnectRequestResponse
	18, // 50: device.RPCDevice.DeleteDevice:output_type -> device.DeleteDeviceResponse
	42, // [42:51] is the sub-list for method output_type
	33, // [33:42] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_device_device_proto_init() }
func file_device_device_proto_init() {
	if File_device_device_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_device_device_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectIotPlatformRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_device_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectIotPlatformResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_device_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisconnectIotPlatformRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_device_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisconnectIotPlatformResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_device_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDeviceByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_device_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDeviceByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_device_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_device_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDeviceListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_device_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDeviceListByUserIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_device_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDeviceListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_device_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_device_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_device_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_device_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceAndConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_device_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceAndConnectRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_device_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_device_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_device_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceConnectStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_device_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceConnectStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_device_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectIotPlatformResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_device_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisconnectIotPlatformResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_device_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDeviceByIdResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_device_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDeviceListResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_device_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceRequestResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_device_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceAndConnectRequestResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_device_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceConnectStatusResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_device_device_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_device_device_proto_goTypes,
		DependencyIndexes: file_device_device_proto_depIdxs,
		EnumInfos:         file_device_device_proto_enumTypes,
		MessageInfos:      file_device_device_proto_msgTypes,
	}.Build()
	File_device_device_proto = out.File
	file_device_device_proto_rawDesc = nil
	file_device_device_proto_goTypes = nil
	file_device_device_proto_depIdxs = nil
}
